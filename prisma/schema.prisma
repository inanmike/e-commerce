
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Store {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  userId      String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  billboards  Billboard[] @relation("StoreToBillboard")
  categories  Category[] @relation("StoreToCategory")
  colors      Color[] @relation("StoreToColor")
  sizes       Size[] @relation("StoreToSize")

}

model Billboard{
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId   String   @db.ObjectId
  store     Store @relation("StoreToBillboard", fields:[storeId],references: [id])
  label     String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  categories Category[]

  @@index([storeId])
}

model Category{
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String   @db.ObjectId
  store       Store @relation("StoreToCategory", fields:[storeId],references: [id])
  billboardId String @db.ObjectId
  billboard   Billboard @relation(fields:[billboardId],references: [id])
  name        String  @unique
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  

  @@index([billboardId])
  @@index([storeId])
}

model Color{
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String   @db.ObjectId
  store       Store @relation("StoreToColor", fields:[storeId],references: [id])
  name        String
  value       String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([storeId])
}

model Size{
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  storeId     String   @db.ObjectId
  store       Store @relation("StoreToSize", fields:[storeId],references: [id])
  name        String
  value       String
  createAt    DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@index([storeId])
}

